{"version":3,"sources":["components/PokemonCard/index.module.scss","containers/Pokemons/index.module.scss","models/pokemon.ts","api/pokenApi.ts","utils/tagUtils.ts","context/PokemonContext/index.tsx","utils/pokemonUtils.ts","components/PokemonCard/index.tsx","components/PokemonDrawer/index.tsx","containers/Pokemons/index.tsx","App.tsx","index.tsx","components/PokemonDrawer/index.module.scss"],"names":["module","exports","POKEMON_TYPE","getPokemons","a","pageNumer","perPage","axios","get","params","offset","limit","response","data","getPokemon","link","getTagColor","tag","NORMAL","FIGHTING","FLYING","POISON","GROUND","ROCK","BUG","GHOST","STEEL","FIRE","WATER","GRASS","ELECTRIC","PSYCHIC","ICE","DRAGON","DARK","FAIRY","UNKNOWN","SHADOW","defaultContext","pokemons","setPokemons","selectedPokemon","setSelectedPokemon","PokemonContext","createContext","PokemonContextProvider","children","useState","Provider","value","getImage","pokemon","sprites","other","dream_world","front_default","PokemonCard","setPokemon","useContext","useEffect","getPokemonInfoByLink","pokemonLink","resInfo","console","log","message","hoverable","className","styles","card","onClick","cover","alt","name","src","img","title","label","tags","types","map","type","index","color","Button","active","skeleton","shape","PokemonDrawer","columnCfg","stats","stat","qty","base_stat","xField","yField","position","style","fill","opacity","xAxis","autoHide","autoRotate","meta","alias","placement","closable","onClose","visible","Boolean","width","drawer","top","content","info","height","weight","graph","Pokemons","resultPage","setResultPage","isLoading","setLoading","setPerPage","page","setPage","loadPokemons","res","results","renderPagination","pagination","showSizeChanger","current","pageSize","pageSizeOptions","responsive","onShowSizeChange","size","showTotal","total","range","defaultCurrent","count","onChange","wrapper","header","subTitle","loading","loadMore","grid","gutter","column","list","dataSource","renderItem","result","Item","url","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42d06bb6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"PokemonCard_card__99tGw\",\"img\":\"PokemonCard_img__1Illz\",\"skeleton\":\"PokemonCard_skeleton__1zyE4\",\"title\":\"PokemonCard_title__3uNnT\",\"label\":\"PokemonCard_label__2Hq4N\",\"tags\":\"PokemonCard_tags__1D-KX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Pokemons_wrapper__3HZ9b\",\"list\":\"Pokemons_list__11c8N\",\"loadMore\":\"Pokemons_loadMore__2HdN7\",\"pagination\":\"Pokemons_pagination__2oNdd\"};","export interface IPokemon {\n    name: string,\n    height: number,\n    weight: number,\n    types: Array<IPokemonType>,\n    abilities: Array<IPokemonAbility>,\n    sprites: {\n        front_default: string,\n        other: {\n            dream_world: {\n                front_default: string\n            },\n            'official-artwork': {\n                front_default: string\n            }\n        }\n    }\n    stats: Array<{\n        \"base_stat\": number,\n        \"stat\": {\n            \"name\": \"hp\",\n        }\n    }>,\n}\n\nexport interface IPokemonType {\n    type: {\n        name: POKEMON_TYPE,\n        url: string\n    }\n}\n\nexport interface IPokemonProperty {\n    name: string,\n    url: string\n}\n\nexport interface IPokemonAbility {\n    ability: IPokemonProperty\n}\n\nexport enum POKEMON_TYPE {\n    NORMAL = 'normal',\n    FIGHTING = 'fighting',\n    FLYING = 'flying',\n    POISON = 'poison',\n    GROUND = 'ground',\n    ROCK = 'rock',\n    BUG = 'bug',\n    GHOST = 'ghost',\n    STEEL = 'steel',\n    FIRE = 'fire',\n    WATER = 'water',\n    GRASS = 'grass',\n    ELECTRIC = 'electric',\n    PSYCHIC = 'psychic',\n    ICE = 'ice',\n    DRAGON = 'dragon',\n    DARK = 'dark',\n    FAIRY = 'fairy',\n    UNKNOWN = 'unknown',\n    SHADOW = 'shadow',\n}","import axios from \"axios\";\nimport {IPageResponse} from \"../models/pageResponse\";\nimport {IPokemon} from \"../models/pokemon\";\n\nexport const getPokemons = async (pageNumer = 1, perPage = 20): Promise<IPageResponse> => {\n    const response = await axios.get('https://pokeapi.co/api/v2/pokemon/', {\n        params: {\n            offset: (pageNumer - 1) * perPage,\n            limit: perPage\n        }\n    });\n\n    return response.data;\n};\n\nexport const getPokemon = async (link: string): Promise<IPokemon> => {\n    const response = await axios.get(link);\n\n    return response.data;\n};\n","import {POKEMON_TYPE} from \"../models/pokemon\";\n\nexport const getTagColor = (tag: POKEMON_TYPE) => {\n    switch (tag) {\n        case POKEMON_TYPE.NORMAL:\n            return '#BED2D3';\n        case POKEMON_TYPE.FIGHTING:\n            return 'lightblue';\n        case POKEMON_TYPE.FLYING:\n            return 'blue';\n        case POKEMON_TYPE.POISON:\n            return 'lime';\n        case POKEMON_TYPE.GROUND:\n            return 'geekblue';\n        case POKEMON_TYPE.ROCK:\n            return 'gold';\n        case POKEMON_TYPE.BUG:\n            return '#A08888';\n        case POKEMON_TYPE.GHOST:\n            return 'grey';\n        case POKEMON_TYPE.STEEL:\n            return '#8894A0';\n        case POKEMON_TYPE.FIRE:\n            return 'red';\n        case POKEMON_TYPE.WATER:\n            return 'purple';\n        case POKEMON_TYPE.GRASS:\n            return 'green';\n        case POKEMON_TYPE.ELECTRIC:\n            return 'magenta';\n        case POKEMON_TYPE.PSYCHIC:\n            return 'lightgreen';\n        case POKEMON_TYPE.ICE:\n            return 'cyan';\n        case POKEMON_TYPE.DRAGON:\n            return 'volcano';\n        case POKEMON_TYPE.DARK:\n            return 'darkgrey';\n        case POKEMON_TYPE.FAIRY:\n            return 'orange';\n        case POKEMON_TYPE.UNKNOWN:\n            return 'gray';\n        case POKEMON_TYPE.SHADOW:\n            return '#3C3C3C';\n\n    }\n}","import React, {createContext, useState} from \"react\"\nimport {IPageResponseItem} from \"../../models/pageResponse\";\nimport {IPokemon} from \"../../models/pokemon\";\n\ninterface IPokemonContextProps {\n    pokemons: Array<IPageResponseItem>,\n    setPokemons: (pokemons: Array<IPageResponseItem>) => void,\n    selectedPokemon: IPokemon | null,\n    setSelectedPokemon: (pokemon: IPokemon | null) => void,\n}\n\nconst defaultContext: IPokemonContextProps = {\n    pokemons: [],\n    setPokemons: () => {\n    },\n    selectedPokemon: null,\n    setSelectedPokemon: () => {\n    },\n}\n\nexport const PokemonContext = createContext(defaultContext)\n\nconst PokemonContextProvider: React.FC = ({children}) => {\n    const [pokemons, setPokemons] = useState<Array<IPageResponseItem>>([]);\n    const [selectedPokemon, setSelectedPokemon] = useState<IPokemon | null>(null);\n\n    return <PokemonContext.Provider value={{\n        pokemons, setPokemons,\n        selectedPokemon, setSelectedPokemon\n    }}>\n        {children}\n    </PokemonContext.Provider>\n}\n\nexport default PokemonContextProvider;","import {IPokemon} from \"../models/pokemon\";\n\nexport const getImage = (pokemon: IPokemon) => {\n    return pokemon.sprites.other.dream_world.front_default\n        ?? pokemon.sprites.front_default\n        ?? pokemon.sprites.other[\"official-artwork\"].front_default;\n}","import {Card, Skeleton, Tag} from \"antd\";\nimport {useContext, useEffect, useState} from \"react\";\nimport {IPokemon} from \"../../models/pokemon\";\nimport {getPokemon} from \"../../api/pokenApi\";\nimport styles from './index.module.scss';\nimport {getTagColor} from \"../../utils/tagUtils\";\nimport {PokemonContext} from \"../../context/PokemonContext\";\nimport {getImage} from \"../../utils/pokemonUtils\";\n\ninterface IPokemonCardProps {\n    link: string\n}\n\nexport const PokemonCard: React.FC<IPokemonCardProps> = ({link}) => {\n    const [pokemon, setPokemon] = useState<IPokemon | undefined>();\n    const {setSelectedPokemon} = useContext(PokemonContext)\n\n    useEffect(() => {\n        getPokemonInfoByLink(link)\n    }, [link]);\n\n    const getPokemonInfoByLink = async (pokemonLink: string) => {\n        try {\n            const resInfo = await getPokemon(link);\n            setPokemon(resInfo)\n        } catch (e) {\n            console.log(`Error while getting the pokemon info: ${e.message}`)\n        }\n    }\n\n    return pokemon ?\n        <Card hoverable\n              className={styles.card}\n              onClick={() => setSelectedPokemon(pokemon)}\n              cover={<img alt={pokemon.name} src={getImage(pokemon)} className={styles.img}/>}\n        >\n            <div className={styles.title}>{pokemon.name}</div>\n            <div className={styles.label}>Type</div>\n            <div className={styles.tags}>\n                {\n                    pokemon.types.map((type, index) => (\n                        <Tag key={index} color={getTagColor(type.type.name)}>{type.type.name}</Tag>\n                    ))\n                }\n            </div>\n        </Card>\n        : <Skeleton.Button active={true} className={styles.skeleton} shape={'square'}/>\n\n}","import React, {useContext} from \"react\";\nimport {Drawer, Tag} from \"antd\";\nimport {PokemonContext} from \"../../context/PokemonContext\";\nimport styles from \"./index.module.scss\";\nimport {Column} from '@ant-design/charts';\nimport {ColumnConfig} from \"@ant-design/charts/es/column\";\nimport {getTagColor} from \"../../utils/tagUtils\";\nimport {getImage} from \"../../utils/pokemonUtils\";\n\nconst PokemonDrawer: React.FC = () => {\n    const {selectedPokemon, setSelectedPokemon} = useContext(PokemonContext)\n\n    const columnCfg: ColumnConfig = {\n        data: selectedPokemon ? selectedPokemon.stats.map(stat => (\n            {\n                qty: stat.base_stat,\n                name: stat.stat.name\n            }\n        )) : [],\n        xField: 'name',\n        yField: 'qty',\n        label: {\n            position: 'middle',\n            style: {\n                fill: '#FFFFFF',\n                opacity: 0.6,\n            },\n        },\n        xAxis: {\n            label: {\n                autoHide: true,\n                autoRotate: false,\n            },\n        },\n        meta: {\n            name: {alias: 'Name'},\n            qty: {alias: 'Quantity'},\n        },\n    };\n\n    return <Drawer\n        placement=\"right\"\n        closable={true}\n        onClose={() => setSelectedPokemon(null)}\n        visible={Boolean(selectedPokemon)}\n        width={'50%'}\n    >\n        <div className={styles.drawer}>\n            <div className={styles.top}>\n                {selectedPokemon &&\n                <img alt={selectedPokemon.name} src={getImage(selectedPokemon)}\n                     className={styles.img}/>}\n\n                <div className={styles.content}>\n                    <div className={styles.info}>\n                        <div className={styles.label}>Name</div>\n                        <div className={`${styles.value} ${styles.name}`}>{selectedPokemon?.name}</div>\n                    </div>\n\n                    {selectedPokemon?.height &&\n                    <div className={styles.info}>\n                        <div className={styles.label}>Height</div>\n                        <div className={styles.value}>{`${selectedPokemon?.height} sm`}</div>\n                    </div>\n                    }\n\n                    {selectedPokemon?.weight &&\n                    <div className={styles.info}>\n                        <div className={styles.label}>Weight</div>\n                        <div className={styles.value}>{`${selectedPokemon.weight / 10} kg`}</div>\n                    </div>\n                    }\n\n                    <div className={styles.info}>\n                        <div className={styles.label}>Type</div>\n                        <div className={styles.value}>\n                            {\n                                selectedPokemon?.types.map((type, index) => (\n                                    <Tag key={index} color={getTagColor(type.type.name)}>{type.type.name}</Tag>\n                                ))\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className={styles.info}>\n                <div className={styles.label}>Statistic</div>\n                <Column {...columnCfg} className={styles.graph}/>\n            </div>\n        </div>\n    </Drawer>\n}\n\nexport default PokemonDrawer;","import {useContext, useEffect, useState} from \"react\";\nimport {IPageResponse} from \"../../models/pageResponse\";\nimport {getPokemons} from \"../../api/pokenApi\";\nimport {PokemonCard} from \"../../components/PokemonCard\";\nimport styles from './index.module.scss';\nimport {List, PageHeader, Pagination, Tag} from \"antd\";\nimport {POKEMON_TYPE} from \"../../models/pokemon\";\nimport {getTagColor} from \"../../utils/tagUtils\";\nimport Search from \"antd/es/input/Search\";\nimport {PokemonContext} from \"../../context/PokemonContext\";\nimport PokemonDrawer from \"../../components/PokemonDrawer\";\n\nexport const Pokemons = () => {\n    const [resultPage, setResultPage] = useState<IPageResponse | undefined>();\n    const [isLoading, setLoading] = useState<boolean>(false);\n    const {pokemons, setPokemons} = useContext(PokemonContext)\n\n\n    //search\n    const [searchText, setSearchText] = useState<string>('');\n    const [searchTypes, setSearchTypes] = useState<Array<POKEMON_TYPE>>([]);\n    const [perPage, setPerPage] = useState<number>(20);\n    const [page, setPage] = useState<number>(1);\n\n    const loadPokemons = async () => {\n        setLoading(true);\n        try {\n            const res = await getPokemons(page, perPage);\n            setResultPage(res);\n            setPokemons([...res.results]);\n        } catch (e) {\n            console.log(`Error while getting a list of pokemons: ${e.message}`)\n        } finally {\n            setLoading(false)\n        }\n    }\n    useEffect(() => {\n        loadPokemons();\n    }, [page, perPage])\n\n    const renderTags = () => {\n        return Object.keys(POKEMON_TYPE).map(key => {\n                // @ts-ignore\n                const type = POKEMON_TYPE[key];\n                return <Tag key={type} color={getTagColor(type)}>{type}</Tag>\n            }\n        );\n    }\n\n    const renderPagination = () => {\n        return <Pagination\n            className={styles.pagination}\n            showSizeChanger\n            current={page}\n            pageSize={perPage}\n            pageSizeOptions={['10', '20', '50']}\n            responsive\n            onShowSizeChange={(current, size) => {\n                setPerPage(size);\n            }}\n            showTotal={(total, range) => `${range[0]}-${range[1]} of ${total} items`}\n            defaultCurrent={page}\n            total={resultPage?.count}\n            onChange={(page, pageSize) => {\n                pageSize && setPerPage(pageSize);\n                setPage(page);\n            }\n            }\n        />\n    }\n\n    return <div className={styles.wrapper}>\n        <PageHeader\n            className={styles.header}\n            title=\"Pokedex\"\n            subTitle=\"Alina Neshchebnaya\"\n        />\n        {/*<Search placeholder=\"Search name\" onSearch={setSearchText}/>*/}\n        {/*{renderTags()}*/}\n        {renderPagination()}\n        <List\n            loading={isLoading}\n            loadMore={<div className={styles.loadMore}/>}\n            grid={{gutter: 16, column: 6}}\n            className={styles.list}\n            dataSource={pokemons}\n            renderItem={result => (\n                <List.Item>\n                    <PokemonCard key={result.url} link={result.url}/>\n                </List.Item>\n            )}\n        />\n        {renderPagination()}\n        <PokemonDrawer/>\n    </div>\n}","import React from 'react';\nimport {Pokemons} from \"./containers/Pokemons\";\nimport PokemonContextProvider from \"./context/PokemonContext\";\n\n\nfunction App() {\n    return (\n        <PokemonContextProvider>\n            <Pokemons/>\n        </PokemonContextProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"drawer\":\"PokemonDrawer_drawer__h9HFx\",\"top\":\"PokemonDrawer_top__2TGy8\",\"img\":\"PokemonDrawer_img__3-OrD\",\"content\":\"PokemonDrawer_content__35M9T\",\"info\":\"PokemonDrawer_info__vJB-W\",\"label\":\"PokemonDrawer_label__C6Kvv\",\"value\":\"PokemonDrawer_value__IEare\",\"name\":\"PokemonDrawer_name__We9So\",\"graph\":\"PokemonDrawer_graph__1tJ17\"};"],"sourceRoot":""}